// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
	RAM8(in=in,load=lo0,address=address[0..2],out=o0);
	RAM8(in=in,load=lo1,address=address[0..2],out=o1);
	RAM8(in=in,load=lo2,address=address[0..2],out=o2);
	RAM8(in=in,load=lo3,address=address[0..2],out=o3);
	RAM8(in=in,load=lo4,address=address[0..2],out=o4);
	RAM8(in=in,load=lo5,address=address[0..2],out=o5);
	RAM8(in=in,load=lo6,address=address[0..2],out=o6);
	RAM8(in=in,load=lo7,address=address[0..2],out=o7);
	
	DMux8Way(in=load,sel=address[3..5],a=lo0,b=lo1,c=lo2,d=lo3,e=lo4,f=lo5,g=lo6,h=lo7);
	Mux8Way16(a=o0,b=o1,c=o2,d=o3,e=o4,f=o5,g=o6,h=o7,sel=address[3..5],out=out);	
}
